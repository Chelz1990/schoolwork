#include <iostream>

using namespace std;

//base class Shape

class Shape {
public:
    virtual double area() const = 0; //virtual function for Area
};

//Circle class
class Circle : public Shape {
private:
    double radius;

public:
    Circle(double r) : radius(r) {}

    double area() const override { //area for Circle
        return 3.14 * radius * radius;
    }
};

//Rectangle class
class Rectangle : public Shape {
private:
    double width;
    double height;

public:
    Rectangle(double w, double h) : width(w), height(h) {}

    double area() const override { //area for rectangle
        return width * height;
    }
};

int main() {
    
Circle circle(3.0);
Rectangle rectangle(4, 5);

//base class pointers    
Shape* shape1 = &circle;
Shape* shape2 = &rectangle;

//area for circle and rectangle
cout << "Circle Area: " << shape1->area() << endl;

cout << "Rectangle Area: " << shape2->area() << endl;

return 0;

}
